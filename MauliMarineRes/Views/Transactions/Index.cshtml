
@{
    ViewBag.Title = "Transaction Index";
}

@Html.Partial("_AddVehicleEntry")

@model Transaction

@using (Html.BeginForm("Manage", "Transactions", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (Model?.TicketNo > 0)
        {
            @Html.HiddenFor(model => model.TicketNo)
        }

        <div class="row">
            <div class="input-group col-3">
                <span class="input-group-addon">Veichle Number: </span>&nbsp;
                @Html.Hidden("VeichleId", (int?)ViewBag.VeichleId)
                <input value="@ViewBag.VeichleNumber" type="text" placeholder="Veichle Number" id="VeichleNumber" name="VeichleNumber" data-autocomplete-idholder="#VeichleId" data-autocombo-url='@Url.Action("AutoCompleteVeichles")' class="form-control" />
            </div>

            <div class="input-group col-3">
                <span class="input-group-addon">Unit</span>&nbsp;
                @Html.DropDownListFor(model => model.UnitId, null, "Select Unit", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UnitId, "", new { @class = "text-danger" })
            </div>

            <div class="input-group col-3">
                <span class="input-group-addon">Material</span>&nbsp;
                @Html.DropDownListFor(model => model.MaterialId, null, "Select Material", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MaterialId, "", new { @class = "text-danger" })
            </div>


            <div class="input-group col-3">
                <span class="input-group-addon">Supplier</span>&nbsp;
                @Html.DropDownListFor(model => model.SupplierId, null, "Select Supplier", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="row">

            <div class="input-group col-3">
                <span class="input-group-addon">Loaded Weight</span>&nbsp;
                @Html.EditorFor(model => model.LoadedWeight, new { htmlAttributes = new { @class = "input form-control", placeholder = "Loaded Weight", @type = "text" } })
                @Html.ValidationMessageFor(model => model.LoadedWeight, "", new { @class = "text-danger" })
            </div>


            <div class="input-group col-3">
                <span class="input-group-addon">Empty Weight</span>&nbsp;
                @Html.EditorFor(model => model.EmptyWeight, new { htmlAttributes = new { @class = "input form-control", placeholder = "Empty Weight", @type = "text" } })
                @Html.ValidationMessageFor(model => model.EmptyWeight, "", new { @class = "text-danger" })
            </div>

            <div class="input-group col-2">
                <span class="input-group-addon">Net Weight</span>&nbsp;
                @Html.EditorFor(model => model.NetWeight, new { htmlAttributes = new { @class = "netwt form-control", placeholder = "Net Weight", @type = "text" } })
                @Html.ValidationMessageFor(model => model.NetWeight, "", new { @class = "text-danger" })
            </div>

            <div class="input-group col-3">
                <span class="input-group-addon">Amount Taken</span>&nbsp;
                @Html.EditorFor(model => model.RecievedAmt, new { htmlAttributes = new { @class = "form-control", placeholder = "Amount", @type = "text" } })
                @Html.ValidationMessageFor(model => model.RecievedAmt, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-1">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}


<br />

@{
    var TransactionList = (IEnumerable<Transactionvw>)ViewBag.Transactions;
}

<table class="table table-primary">
    <tr>
        <th>
            Ticket Number
        </th>
        <th>
            Unit
        </th>
        <th>
            Veichle Number
        </th>
        <th>
            Loaded Weight
        </th>
        <th>
            Empty Weight
        </th>
        <th>
            Net Weight
        </th>
        <th>
            Supplier
        </th>
        <th>
            Material
        </th>
        <th>
            Amount
        </th>
        <th>
            Transaction Date
        </th>
        <th></th>
        <th></th>
    </tr>

    @foreach (var item in TransactionList)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelLocation => item.TicketNo)
            </td>
            <td>
                @Html.DisplayFor(modelLocation => item.UnitName)
            </td>
            <td>
                @Html.DisplayFor(modelLocation => item.VeichleNumber)
            </td>
            <td>
                @Html.DisplayFor(modelLocation => item.LoadedWeight)
            </td>
            <td>
                @Html.DisplayFor(modelLocation => item.EmptyWeight)
            </td>
            <td>
                @Html.DisplayFor(modelLocation => item.NetWeight)
            </td>
            <td>
                @Html.DisplayFor(modelLocation => item.SupplierName)
            </td>
            <td>
                @Html.DisplayFor(modelLocation => item.MaterialName)
            </td>
            <td>
                @Html.DisplayFor(modelLocation => item.RecievedAmt)
            </td>
            <td>
                @Html.DisplayFor(modelLocation => item.Tdate)
            </td>
            <td>
                <a href="@Url.Action("Manage","Transactions",new { id= item.TicketNo})" style="color:blue;">Edit</a>
            </td>
            <td>
                <a href="@Url.Action("_ViewTransactions","Transactions",new { id= item.TicketNo})" style="color:blue;">View</a>
            </td>
        </tr>
    }

</table>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>

    $(function () {
        //$(".input").change(function () {
        //    var toplan = 0;
        //    $(".input").each(function () {
        //        toplan = toplan + parseInt($(this).val());
        //    });
        //    $("input[name=NetWeight]").val(toplan);
        //});

        $(".input").change(function () {
            var toplan = 0;
            $(".input").each(function () {
                toplan = toplan + parseInt($(this).val());
            });
            $(".netwt").val(toplan);
        });
    });

    $(function () {
        $('#save').click(function () {
                $.post('@Url.Action("AddVehicle", "Transactions")', { Number: $('#vnumber').val() });
                location.reload();
        });

        $('#vehicle').load('@Url.Action("_AddVehicleEntry","Transactions")');
    });
</script>